<h2>Tip</h2>
<table>
  <thead>
    <tr>
      <th>Chain height</th>
      <th>Best block</th>
      <th>Pruned height</th>
      <th>Version</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td
        style="text-align: center;"
      >{{this.tipInfo.metadata.best_block_height}}</td>
      <td style="text-align: center;">{{hex
          this.tipInfo.metadata.best_block_hash
        }}</td>
      <td
        style="text-align: center;"
      >{{this.tipInfo.metadata.pruned_height}}</td>
      <td style="text-align: center;">{{this.version}}</td>
    </tr>
  </tbody>
</table>
<br />

<h2>Proof of work split</h2>
<table>
  <thead>
    <tr>
      <th rowspan="2">&nbsp;</th>
      <th colspan="4">
        In the last x blocks
      </th>
    </tr>
    <tr>
      <th>10</th>
      <th>20</th>
      <th>50</th>
      <th>100</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Monero (RandomX)</th>
      <td style="text-align: center;">{{this.algoSplit.moneroRx10}}
        {{percentbar
          this.algoSplit.moneroRx10
          this.algoSplit.sha3X10
          this.algoSplit.tariRx10
        }}</td>
      <td style="text-align: center;">{{this.algoSplit.moneroRx20}}
        {{percentbar
          this.algoSplit.moneroRx20
          this.algoSplit.sha3X20
          this.algoSplit.tariRx20
        }}</td>
      <td style="text-align: center;">{{this.algoSplit.moneroRx50}}
        {{percentbar
          this.algoSplit.moneroRx50
          this.algoSplit.sha3X50
          this.algoSplit.tariRx50
        }}</td>
      <td style="text-align: center;">{{this.algoSplit.moneroRx100}}
        {{percentbar
          this.algoSplit.moneroRx100
          this.algoSplit.sha3X100
          this.algoSplit.tariRx100
        }}</td>
    </tr>
    <tr>
      <th>SHA-3X</th>
      <td style="text-align: center;">{{this.algoSplit.sha3X10}}
        {{percentbar
          this.algoSplit.sha3X10
          this.algoSplit.moneroRx10
          this.algoSplit.tariRx10
        }}</td>
      <td style="text-align: center;">{{this.algoSplit.sha3X20}}
        {{percentbar
          this.algoSplit.sha3X20
          this.algoSplit.moneroRx20
          this.algoSplit.tariRx20
        }}</td>
      <td style="text-align: center;">{{this.algoSplit.sha3X50}}
        {{percentbar
          this.algoSplit.sha3X50
          this.algoSplit.moneroRx50
          this.algoSplit.tariRx50
        }}</td>
      <td style="text-align: center;">{{this.algoSplit.sha3X100}}
        {{percentbar
          this.algoSplit.sha3X100
          this.algoSplit.moneroRx100
          this.algoSplit.tariRx100
        }}</td>
    </tr>
    <tr>
      <th>Tari (RandomX)</th>
      <td style="text-align: center;">{{this.algoSplit.tariRx10}}
        {{percentbar
          this.algoSplit.tariRx10
          this.algoSplit.moneroRx10
          this.algoSplit.sha3X10
        }}</td>
      <td style="text-align: center;">{{this.algoSplit.tariRx20}}
        {{percentbar
          this.algoSplit.tariRx20
          this.algoSplit.moneroRx20
          this.algoSplit.sha3X20
        }}</td>
      <td style="text-align: center;">{{this.algoSplit.tariRx50}}
        {{percentbar
          this.algoSplit.tariRx50
          this.algoSplit.moneroRx50
          this.algoSplit.sha3X50
        }}</td>
      <td style="text-align: center;">{{this.algoSplit.tariRx100}}
        {{percentbar
          this.algoSplit.tariRx100
          this.algoSplit.moneroRx100
          this.algoSplit.sha3X100
        }}</td>
    </tr>
  </tbody>
</table>
<br />

<h2>Relative block times (minutes) - last 100 blocks</h2>
<table class="noborder">
  <tr>
    <td>
      <h4>All</h4>
      Target time: 2 minutes (avg
      {{this.blockTimes.average}})
      <pre>{{chart this.blockTimes.series 15 false}}</pre>
    </td>
  </tr>
</table>
<br />
<table class="noborder">
  <tr>
    <td>
      <h4>Monero RandomX</h4>
      Target time: 6 minutes (avg
      {{this.moneroRandomxTimes.average}})
      <pre>{{chart this.moneroRandomxTimes.series 15 false}}</pre>
    </td>
    <td>
      <h4>SHA3X</h4>
      Target time: 6 minutes (avg
      {{this.sha3xTimes.average}})
      <pre>{{chart this.sha3xTimes.series 15 false}}</pre>
    </td>
    <td>
      <h4>Tari RandomX</h4>
      Target time: 6 minutes (avg
      {{this.tariRandomxTimes.average}})
      <pre>{{chart this.tariRandomxTimes.series 15 false}}</pre>
    </td>
  </tr>
</table>
<br />

<h2>Estimated Hash rates</h2>
<table class="noborder">
  <tr>
    <td>
      <h4>Monero RandomX</h4>
      Current estimated Hash Rate (180 blocks, 1.5 hours):
      {{unitFormat this.currentMoneroRandomxHashRate "giga" 3}}
      GH/s ({{format_thousands this.averageMoneroRandomxMiners}}
      average miners)
      <pre>{{chart this.moneroRandomxHashRates 15 false "giga"}}
      </pre>
    </td>
  </tr>
  <tr>
    <td>
      <h4>SHA3X</h4>
      Current estimated Hash Rate (180 blocks, 1.5 hours):
      {{unitFormat this.currentSha3xHashRate "tera" 3}}
      TH/s ({{format_thousands this.averageSha3xMiners}}
      average miners)
      <pre>{{chart this.sha3xHashRates 15 false "tera"}}
      </pre>
    </td>
  </tr>
  <tr>
    <td>
      <h4>Tari RandomX</h4>
      Current estimated Hash Rate (180 blocks, 1.5 hours):
      {{unitFormat this.currentTariRandomxHashRate "giga" 3}}
      GH/s ({{format_thousands this.averageTariRandomxMiners}}
      average miners)
      <pre>{{chart this.tariRandomxHashRates 15 false "giga"}}
      </pre>
    </td>
  </tr>
</table>
<br />

<h2>{{title}}</h2>
<table>
  <thead>
    <tr>
      <th>Height</th>
      <th>Time</th>
      <th>Proof of Work</th>
      <th>Hash</th>
      <th>Total Coinbase (XTM)</th>
      <th>Kernels</th>
      <th>Coinbase Outputs</th>
      <th>Other Outputs</th>
      <th>Inputs</th>
    </tr>
  </thead>
  <tbody>
    {{#each this.headers}}
      <tr>
        <td><a href="blocks/{{this.height}}">{{this.height}}</a></td>
        <td style="text-align: center;">{{timestamp this.timestamp}}</td>
        <td style="text-align: center;">{{this.powText}}</td>
        <td style="text-align: center;">{{hex this.hash}}</td>
        <td style="text-align: center;">{{totalCoinbaseXtm}}</td>
        <td style="text-align: center;">{{kernels}}</td>
        <td style="text-align: center;">{{numCoinbases}}</td>
        <td style="text-align: center;">{{numOutputsNoCoinbases}}</td>
        <td style="text-align: center;">{{numInputs}}</td>
      </tr>
    {{/each}}
  </tbody>
</table>

<p>
  <a href="/?from={{prevPage}}&limit={{limit}}">&lt; Prev</a>
  <a href="/?limit={{limit}}">Tip</a>
  <a href="/?from={{nextPage}}&limit={{limit}}">Next &gt;</a>
</p>
<p>
  Show per page:
  <a href="/?from={{from}}&limit=10">10</a>
  <a href="/?from={{from}}&limit=20">20</a>
  <a href="/?from={{from}}&limit=50">50</a>
  <a href="/?from={{from}}&limit=100">100</a>
</p>
<br />

<h2>Mempool</h2>
<table>
  <thead>
    <tr>
      <th>Excess</th>
      <th>Total Fees</th>
      <th>Outputs</th>
      <th>Kernels</th>
      <th>Inputs</th>
    </tr>
  </thead>
  <tbody>
    {{#each mempool}}
      {{#with this.transaction.body}}
        <tr>
          <td><a href="/mempool/{{hex this.signature}}">{{hex
                this.signature
              }}</a></td>
          <td style="text-align: center;">{{this.total_fees}}</td>
          <td style="text-align: center;">{{this.outputs.length}}</td>
          <td style="text-align: center;">{{this.kernels.length}}</td>
          <td style="text-align: center;">{{this.inputs.length}}</td>
        </tr>
      {{/with}}
    {{/each}}
  </tbody>
</table>
<br />

<h2>Active Validator Nodes</h2>
<table>
  <thead>
    <tr>
      <th>Public key</th>
      <th>Shard key</th>
    </tr>
  </thead>
  <tbody>
    {{#each this.activeVns}}
      <tr>
        <td>{{hex this.public_key}}</td>
        <td>{{hex this.shard_key}}</td>
      </tr>
    {{/each}}
  </tbody>
</table>
<br />

<!--Search kernel-->
<div id="error-message-kernel" style="display: none; color: red;"></div>
<form
  method="get"
  action="search_kernels"
  onsubmit="return validateInput(
    document.getElementById('nonces').value,
    document.getElementById('error-message-kernel')
  ) && validateInput(
    document.getElementById('signatures').value,
    document.getElementById('error-message-kernel')
  )"
>
  <div style="display: flex; align-items: center; gap: 10px;">
    <label for="kernel">Find kernel(s)</label>
    <label for="nonces">Nonce(s)</label>
    <input id="nonces" name="nonces" type="text" style="width: 450px;" />
    <label for="signatures">Signature(s)</label>
    <input
      id="signatures"
      name="signatures"
      type="text"
      style="width: 450px;"
    />
    <button type="submit">search</button>
  </div>
</form>

<!--Search output or block-->
<div id="error-message-hash" style="display: none; color: red;"></div>
<form
  method="get"
  action="search_by_hash_or_height"
  onsubmit="return validateInput(
    document.getElementById('hash_or_number').value,
    document.getElementById('error-message-hash')
  )"
>
  <label for="hash_or_number">Find output [by payref/commitment hash(es)] or block [by hash(es) or height(s)]</label>
  <input
    id="hash_or_number"
    name="hash_or_number"
    type="text"
    style="width: 950px;"
  />
  <button type="submit">search</button>
</form>

<!--General script to validate hash input fields-->
<script>
  function validateInput(inputElement, errorMessageElement) {
    const hexRegex = /^[0-9a-fA-F]{64}$/;
    const numberRegex = /^[0-9]+$/;
    const values = inputElement.split(",").map((ref) => ref.trim()).filter((ref) => ref !== "");
    const invalidValues = values.filter((ref) => !hexRegex.test(ref) && !numberRegex.test(ref));
    if (invalidValues.length > 0) {
      errorMessageElement.textContent =
        `Input must be a 64-character hex string or valid number.\nInvalid hash(es): ${invalidValues.join(", ")}`;
      errorMessageElement.style.display = 'block';
      return false;
    }
    errorMessageElement.style.display = 'none';
    return true;
  }
</script>
